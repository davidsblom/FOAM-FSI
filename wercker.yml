box: davidsblom/foam-fsi

command-timeout: 60
no-response-timeout: 30

build:
    steps:
        - script:
            name: install packages
            code: |
                apt-get update
                apt-get -y install git build-essential flex bison zlib1g-dev libreadline-dev libncurses-dev libxt-dev libopenmpi-dev openmpi-bin rpm wget cmake hwloc scotch gfortran python unzip scons libiberty-dev libscotch-dev liblapack-dev libblas-dev cppcheck
        - script:
            name: initialize git submodules
            code: |
                git checkout .
                git submodule update --init --recursive
        - script:
            name: foam-extend third-party
            code: |
                if [ -f "$WERCKER_CACHE_DIR/foam-extend-3.2.tar.gz" ]; then
                    debug "foam-extend-3.2 found in cache"
                    rsync -azvh $WERCKER_CACHE_DIR/foam-extend-3.2.tar.gz ./
                    tar -zxf foam-extend-3.2.tar.gz
                else
                    debug "foam-extend-3.2 not found in cache, will download and compile"

                    git clone git://git.code.sf.net/p/foam-extend/foam-extend-3.2
                    export PARAVIEW_SYSTEM=1
                    export CMAKE_SYSTEM=1
                    export HWLOC_SYSTEM=1
                    export SCOTCH_SYSTEM=1
                    export PYFOAM_SYSTEM=1
                    export CUDA_IGNORE=1
                    export SWAK4FOAM_SYSTEM=1
                    export WM_MPLIB=SYSTEMOPENMPI
                    export OPENMPI_DIR=/usr
                    export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                    export FOAM_INST_DIR=`pwd`

                    sed -i s/"CC          = g++ -m64"/"CC          = mpicxx -m64 -DEIGEN_INITIALIZE_MATRICES_BY_NAN"/g foam-extend-3.2/wmake/rules/linux64Gcc/c++
                    sed -i s/"c++DBUG    = -ggdb3 -DFULLDEBUG"/"c++DBUG    = -g -DFULLDEBUG -DEIGEN_INITIALIZE_MATRICES_BY_NAN --coverage -fprofile-arcs -ftest-coverage"/g foam-extend-3.2/wmake/rules/linux64Gcc/c++Debug

                    cd foam-extend-3.2
                    source etc/bashrc
                    unset WM_THIRD_PARTY_USE_CMAKE_322
                    unset WM_THIRD_PARTY_USE_HWLOC_1101
                    unset WM_THIRD_PARTY_USE_SCOTCH_604
                    unset WM_THIRD_PARTY_USE_PYFOAM_064

                    # wmake is required for subsequent targets
                    ( cd wmake/src && make )

                    # build ThirdParty sources
                    ( cd $WM_THIRD_PARTY_DIR && ./AllMake )

                    # cleanup build files
                    rm -rf $WM_THIRD_PARTY_DIR/rpmBuild/BUILD/*
                fi
        - script:
            name: foam-extend
            code: |
                if [ ! -f "$WERCKER_CACHE_DIR/foam-extend-3.2.tar.gz" ]; then
                    export PARAVIEW_SYSTEM=1
                    export CMAKE_SYSTEM=1
                    export HWLOC_SYSTEM=1

                    export SCOTCH_SYSTEM=1
                    export SCOTCH_DIR=/usr
                    export SCOTCH_BIN_DIR=/usr/bin
                    export SCOTCH_LIB_DIR=/usr/lib
                    export SCOTCH_INCLUDE_DIR=/usr/include/scotch

                    export PYFOAM_SYSTEM=1
                    export CUDA_IGNORE=1
                    export SWAK4FOAM_SYSTEM=1
                    export WM_MPLIB=SYSTEMOPENMPI
                    export OPENMPI_DIR=/usr
                    export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                    export FOAM_INST_DIR=`pwd`

                    cd foam-extend-3.2
                    source etc/bashrc
                    unset WM_THIRD_PARTY_USE_CMAKE_322
                    unset WM_THIRD_PARTY_USE_HWLOC_1101
                    unset WM_THIRD_PARTY_USE_SCOTCH_604
                    unset WM_THIRD_PARTY_USE_PYFOAM_064

                    . $WM_PROJECT_DIR/etc/settings.sh
                    cd $WM_PROJECT_DIR/src
                    wmakePrintBuild -check || /bin/rm -f foam/Make/$WM_OPTIONS/global.? 2>/dev/null
                    wmakeLnInclude foam
                    wmakeLnInclude meshTools
                    wmakeLnInclude OSspecific/$WM_OSTYPE
                    wmake libo  OSspecific/$WM_OSTYPE
                    wmake libso foam
                    decompositionMethods/AllwmakeLnInclude
                    decompositionMethods/Allwmake
                    wmake libso lagrangian/basic
                    wmake libso edgeMesh
                    wmake libso surfMesh
                    wmake libso meshTools
                    wmake libso finiteVolume
                    wmake libso finiteArea
                    wmake libso lduSolvers
                fi
        - script:
            name: foam-extend libraries
            code: |
                if [ ! -f "$WERCKER_CACHE_DIR/foam-extend-3.2.tar.gz" ]; then
                    export PARAVIEW_SYSTEM=1
                    export CMAKE_SYSTEM=1
                    export HWLOC_SYSTEM=1

                    export SCOTCH_SYSTEM=1
                    export SCOTCH_DIR=/usr
                    export SCOTCH_BIN_DIR=/usr/bin
                    export SCOTCH_LIB_DIR=/usr/lib
                    export SCOTCH_INCLUDE_DIR=/usr/include/scotch

                    export PYFOAM_SYSTEM=1
                    export CUDA_IGNORE=1
                    export SWAK4FOAM_SYSTEM=1
                    export WM_MPLIB=SYSTEMOPENMPI
                    export OPENMPI_DIR=/usr
                    export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                    export FOAM_INST_DIR=`pwd`

                    cd foam-extend-3.2
                    source etc/bashrc
                    unset WM_THIRD_PARTY_USE_CMAKE_322
                    unset WM_THIRD_PARTY_USE_HWLOC_1101
                    unset WM_THIRD_PARTY_USE_SCOTCH_604
                    unset WM_THIRD_PARTY_USE_PYFOAM_064

                    cd $WM_PROJECT_DIR/src
                    wmake libso tetFiniteElement
                    dynamicMesh/AllwmakeLnInclude
                    dynamicMesh/Allwmake
                    wmake libso coupledMatrix
                    wmake libso sampling
                    wmake libso ODE
                    thermophysicalModels/Allwmake
                    transportModels/Allwmake
                    turbulenceModels/Allwmake
                    lagrangian/Allwmake
                    wmake libso solidModels
                fi
        - script:
            name: store cache
            code: |
                if [ ! -f "$WERCKER_CACHE_DIR/foam-extend-3.2.tar.gz" ]; then

                    cd foam-extend-3.2
                    find . -not -path './lib/linux64GccDPOpt' -not -path './ThirdParty/*' -name 'linux64GccDPOpt' -type d -print -prune -exec rm -rf {} \;
                    find . -not -path './lib/linux64GccDPDebug' -not -path './ThirdParty/*' -name 'linux64GccDPDebug' -type d -print -prune -exec rm -rf {} \;
                    cd ../

                    tar -zcf foam-extend-3.2.tar.gz foam-extend-3.2
                    rsync -azvh foam-extend-3.2.tar.gz $WERCKER_CACHE_DIR/
                fi
        - script:
            name: setup environment
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`

                source foam-extend-3.2/etc/bashrc

                pwdstring=`pwd`
                prefLocation=$WM_PROJECT_DIR/etc/prefs.sh

                if [ -z "$FOAM_USER_SRC" ]; then
                    echo "Creating FOAM_USER_SRC before compiling in $prefLocation"
                    echo "# Setting up environment variable for FOAM-FSI" >> $prefLocation
                    echo "export FOAM_USER_SRC=$pwdstring/src" >> $prefLocation
                fi

                source $FOAM_SRC/../etc/bashrc
        - script:
            name: PETSc
            code: |
                export PETSC_VERSION=3.6.3
                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export PETSC_ARCH=x86_64

                source foam-extend-3.2/etc/bashrc

                cd src/thirdParty

                if [ -f "$WERCKER_CACHE_DIR/petsc-${PETSC_VERSION}.tar.xz" ]; then
                    debug "PETSc library found in cache"
                    rsync -azvh $WERCKER_CACHE_DIR/petsc-${PETSC_VERSION}.tar.xz ./
                    tar -Jxf petsc-${PETSC_VERSION}.tar.xz
                    ln -s petsc-${PETSC_VERSION} petsc
                    cp petsc-${PETSC_VERSION}/${PETSC_ARCH}/lib/lib* ${FOAM_LIBBIN}/
                fi

                ./compile_petsc

                if [ ! -f "$WERCKER_CACHE_DIR/petsc-${PETSC_VERSION}.tar.xz" ]; then
                    tar -cJf petsc-${PETSC_VERSION}.tar.xz petsc-${PETSC_VERSION}
                    rsync -azvh petsc-${PETSC_VERSION}.tar.xz $WERCKER_CACHE_DIR/
                fi
        - script:
            name: boost
            code: |
                export BOOST_VERSION=1_55_0
                export BOOST_VERSION_DOT=1.55.0
                cd src/thirdParty

                if [ -f "$WERCKER_CACHE_DIR/boost_${BOOST_VERSION}.tar.bz2" ]; then
                    debug "boost library found in cache"
                    rsync -azvh $WERCKER_CACHE_DIR/boost_${BOOST_VERSION}.tar.bz2 ./
                else
                    wget -O boost_${BOOST_VERSION}.tar.bz2 http://downloads.sourceforge.net/project/boost/boost/${BOOST_VERSION_DOT}/boost_${BOOST_VERSION}.tar.bz2
                    rsync -azvh boost_${BOOST_VERSION}.tar.bz2 $WERCKER_CACHE_DIR/
                fi

                tar jxf boost_${BOOST_VERSION}.tar.bz2
                ln -s boost_${BOOST_VERSION} boost
        - script:
            name: deal.II
            code: |
                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export DEALII_VERSION=8.4.0
                export BOOST_VERSION=1_55_0

                source foam-extend-3.2/etc/bashrc

                cd src/thirdParty

                if [ -f "$WERCKER_CACHE_DIR/dealii-${DEALII_VERSION}.tar.xz" ]; then
                    debug "deal.II library found in cache"
                    rsync -azvh $WERCKER_CACHE_DIR/dealii-${DEALII_VERSION}.tar.xz ./
                    tar -Jxf dealii-${DEALII_VERSION}.tar.xz
                    ln -s dealii-${DEALII_VERSION} dealii
                    cp dealii-${DEALII_VERSION}/bin/lib/libdeal_II* ${FOAM_LIBBIN}/
                fi

                ./compile_dealii

                if [ ! -f "$WERCKER_CACHE_DIR/dealii-${DEALII_VERSION}.tar.xz" ]; then
                    tar -cJf dealii-${DEALII_VERSION}.tar.xz dealii-${DEALII_VERSION}
                    rsync -azvh dealii-${DEALII_VERSION}.tar.xz $WERCKER_CACHE_DIR/
                fi
        - script:
            name: googletest
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export GTEST_VERSION=1.7.0

                source foam-extend-3.2/etc/bashrc

                cd src/thirdParty

                if [ -f "$WERCKER_CACHE_DIR/gtest-${GTEST_VERSION}.tar.xz" ]; then
                    debug "googletest library found in cache"
                    rsync -azvh $WERCKER_CACHE_DIR/gtest-${GTEST_VERSION}.tar.xz ./
                    tar -Jxf gtest-${GTEST_VERSION}.tar.xz
                    ln -s gtest-${GTEST_VERSION} gtest
                else
                    debug "googletest library not found in cache, will download and compile"
                fi

                ./compile_gtest

                if [ ! -f "$WERCKER_CACHE_DIR/gtest-${GTEST_VERSION}.tar.xz" ]; then
                    tar -cJf gtest-${GTEST_VERSION}.tar.xz gtest-${GTEST_VERSION}
                    rsync -azvh gtest-${GTEST_VERSION}.tar.xz $WERCKER_CACHE_DIR/
                fi
        - script:
            name: precice
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`

                source foam-extend-3.2/etc/bashrc

                cd src/thirdParty

                ./compile_precice
        - script:
            name: yaml-cpp
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export YAML_CPP_VERSION=0.5.3

                source foam-extend-3.2/etc/bashrc

                cd src/thirdParty

                if [ -f "$WERCKER_CACHE_DIR/yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz" ]; then
                    debug "yaml-cpp library found in cache"
                    rsync -azvh $WERCKER_CACHE_DIR/yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz ./
                    tar -Jxf yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz
                    ln -s yaml-cpp-release-${YAML_CPP_VERSION} yaml-cpp
                else
                    debug "yaml-cpp library not found in cache, will download and compile"
                fi

                ./compile_yaml

                if [ ! -f "$WERCKER_CACHE_DIR/yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz" ]; then
                    tar -cJf yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz yaml-cpp-release-${YAML_CPP_VERSION}
                    rsync -azvh yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz $WERCKER_CACHE_DIR/
                fi
        - script:
            name: boundary conditions
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`

                source foam-extend-3.2/etc/bashrc

                wmakeLnInclude src/boundaryConditions
                wmakeLnInclude src/fvSchemes
                wmakeLnInclude src/fsi
                wmakeLnInclude src/RBFMeshMotionSolver
                wmakeLnInclude src/SRFModelAbs
                wmake libso src/boundaryConditions
        - script:
            name: schemes
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`

                source foam-extend-3.2/etc/bashrc

                wmake libso src/fvSchemes
        - script:
            name: fsi
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`

                source foam-extend-3.2/etc/bashrc

                wmake libso src/fsi
        - script:
            name: radial basis function mesh motion solver
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`

                source foam-extend-3.2/etc/bashrc

                wmake libso src/RBFMeshMotionSolver
        - script:
            name: FSI solvers
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`

                source foam-extend-3.2/etc/bashrc

                wmake applications/solvers/fsi/fsiFoam
                wmake applications/solvers/fsi/solidFoam
                wmake applications/solvers/fsi/fluidFoam
        - script:
            name: precice FSI solvers
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`

                source foam-extend-3.2/etc/bashrc

                wmake applications/solvers/fsi/fsiSolidFoam
                wmake applications/solvers/fsi/fsiFluidFoam
        - script:
            name: test app
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export WM_NCOMPPROCS=2

                source foam-extend-3.2/etc/bashrc

                wmake all
        - script:
            name: testsuite-sdc
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export WM_NCOMPPROCS=2

                source foam-extend-3.2/etc/bashrc

                cd src/tests
                python runTests.py testsuite-sdc
        - script:
            name: testsuite-sdc-fsi
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export WM_NCOMPPROCS=2

                source foam-extend-3.2/etc/bashrc

                cd src/tests
                python runTests.py testsuite-sdc-fsi
        - script:
            name: testsuite-rbf
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export WM_NCOMPPROCS=1

                source foam-extend-3.2/etc/bashrc

                cd src/tests
                python runTests.py testsuite-rbf
        - script:
            name: testsuite-spacemapping
            code: |
                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export WM_NCOMPPROCS=2

                source foam-extend-3.2/etc/bashrc
                cd src/tests
                python runTests.py testsuite-spacemapping
        - script:
            name: testsuite-fsi
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export WM_NCOMPPROCS=2

                source foam-extend-3.2/etc/bashrc

                cd src/tests
                python runTests.py testsuite-fsi
        - script:
            name: testsuite-dealii
            code: |

                export PARAVIEW_SYSTEM=1
                export CMAKE_SYSTEM=1
                export HWLOC_SYSTEM=1
                export SCOTCH_SYSTEM=1
                export PYFOAM_SYSTEM=1
                export CUDA_IGNORE=1
                export SWAK4FOAM_SYSTEM=1
                export WM_MPLIB=SYSTEMOPENMPI
                export OPENMPI_DIR=/usr
                export OPENMPI_BIN_DIR=$OPENMPI_DIR/bin
                export FOAM_INST_DIR=`pwd`
                export WM_NCOMPPROCS=2

                source foam-extend-3.2/etc/bashrc

                cd src/tests
                python runTests.py testsuite-dealii
        - script:
            name: cppcheck
            code: |
                (cd src/fsi && cppcheck --enable=performance,portability .)
                (cd src/RBFMeshMotionSolver && cppcheck --enable=performance,portability .)
                (cd src/tests && cppcheck --enable=performance,portability .)
                (cd applications && cppcheck --enable=performance,portability .)
        - script:
            name: list cache files
            code: ls -lah $WERCKER_CACHE_DIR
        - script:
            name: cleanup
            code: rm -rf *
