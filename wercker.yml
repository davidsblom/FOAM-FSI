box: davidsblom/foam-fsi

command-timeout: 60
no-response-timeout: 30

build:
    steps:
        - script:
            name: initialize git submodules
            code: |
                git checkout .
                git submodule update --init --recursive
                sudo apt-get clean && sudo apt-get update && sudo apt-get -y install libopenblas-dev libatlas-dev liblapack-dev libscalapack-mpi-dev
        - script:
            name: initialize dependencies
            code: |
                # foam-extend
                cd /home
                tar xf foam-extend-3.2.tar.gz && rm foam-extend-3.2.tar.gz
                source foam-extend-3.2/etc/prefs.sh && source foam-extend-3.2/etc/bashrc

                # boost
                cd $WERCKER_SOURCE_DIR/src/thirdParty
                ln -s /home/boost_1_61_0 boost
                sed -i "s/string const/std::string const/" ./boost/boost/rational.hpp
                cd boost && ./bootstrap.sh --with-libraries=log,program_options && ./b2 -j `nproc`
                cp stage/lib/* $FOAM_LIBBIN/ && cd ..

                # petsc
                ln -s /home/petsc-3.6.4 petsc
                cp petsc/x86_64/lib/lib* ${FOAM_LIBBIN}/

                # deal.II
                ln -s /home/dealii-8.4.1 dealii
                cp dealii/bin/lib/libdeal* ${FOAM_LIBBIN}/

                # googletest
                ln -s /home/googletest-release-1.7.0 gtest

                # yaml-cpp
                ln -s /home/yaml-cpp-release-0.5.3 yaml-cpp
                cp yaml-cpp/build/libyaml-cpp* ${FOAM_LIBBIN}/
        - script:
            name: elemental
            code: |
                cd src/thirdParty
                ./compile_elemental
        - script:
            name: precice
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)

                cd src/thirdParty

                export PRECICE_MPI_LIB=mpi
                export PRECICE_MPI_LIB_PATH="`mpicc --showme:libdirs`"
                export PRECICE_MPI_INC_PATH="`mpicc --showme:incdirs`"
                export CPLUS_INCLUDE_PATH=`pwd`/eigen:`pwd`/boost
                export LIBRARY_PATH=$FOAM_LIBBIN

                cd precice
                scons -j $WM_NCOMPPROCS build=release python=off petsc=off compiler=mpicxx solib
                cp build/release-nopetsc-nopython/libprecice.* ${FOAM_LIBBIN}/
                rm -rf build/*
        - script:
            name: boundary conditions
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmakeLnInclude src/boundaryConditions
                wmakeLnInclude src/fvSchemes
                wmakeLnInclude src/fsi
                wmakeLnInclude src/RBFMeshMotionSolver
                wmakeLnInclude src/SRFModelAbs
                wmake libso src/boundaryConditions
        - script:
            name: schemes
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/fvSchemes
        - script:
            name: fsi
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/fsi
        - script:
            name: radial basis function mesh motion solver
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/RBFMeshMotionSolver
        - script:
            name: solvers
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd applications/solvers/fsi && wmake all
                cd ../ && wmake unsteadyPUCoupledFoam
        - script:
            name: test app
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && wmake all
        - script:
            name: testsuite-sdc
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-sdc
        - script:
            name: testsuite-sdc-fsi
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-sdc-fsi
        - script:
            name: testsuite-rbf
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-rbf
                mpirun -np 4 --allow-run-as-root testsuite-rbf
        - script:
            name: testsuite-spacemapping
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-spacemapping
        - script:
            name: testsuite-fsi
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-fsi
        - script:
            name: testsuite-dealii
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-dealii
        - script:
            name: cppcheck
            code: |
                (cd src/fsi && cppcheck -j `nproc` --error-exitcode=1 --enable=performance,portability .)
                (cd src/RBFMeshMotionSolver && cppcheck -j `nproc` --error-exitcode=1 --enable=performance,portability .)
                (cd src/tests && cppcheck -j `nproc` --error-exitcode=1 --enable=performance,portability .)
                (cd applications && cppcheck -j `nproc` --error-exitcode=1 --enable=performance,portability .)
        - script:
            name: tutorials
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests/tutorials && python testsuite.py
        - script:
            name: cleanup
            code: rm -rf * .git* .travis.yml .uncrustify.cfg

debug:
    box: davidsblom/foam-fsi:debug
    steps:
        - script:
            name: initialize git submodules
            code: |
                git checkout .
                git submodule update --init --recursive
        - script:
            name: initialize dependencies
            code: |
                # foam-extend
                cd /home
                tar xf foam-extend-3.2.tar.gz && rm foam-extend-3.2.tar.gz
                source foam-extend-3.2/etc/prefs.sh && source foam-extend-3.2/etc/bashrc

                # boost
                cd $WERCKER_SOURCE_DIR/src/thirdParty
                ln -s /home/boost_1_61_0 boost
                sed -i "s/string const/std::string const/" ./boost/boost/rational.hpp
                cd boost && ./bootstrap.sh --with-libraries=log,program_options && ./b2 -j `nproc`
                cp stage/lib/* $FOAM_LIBBIN/ && cd ..

                # petsc
                ln -s /home/petsc-3.6.4 petsc
                cp petsc/x86_64/lib/lib* ${FOAM_LIBBIN}/

                # deal.II
                ln -s /home/dealii-8.4.1 dealii
                cp dealii/bin/lib/libdeal* ${FOAM_LIBBIN}/

                # googletest
                ln -s /home/googletest-release-1.7.0 gtest

                # yaml-cpp
                ln -s /home/yaml-cpp-release-0.5.3 yaml-cpp
                cp yaml-cpp/build/libyaml-cpp* ${FOAM_LIBBIN}/
        - script:
            name: elemental
            code: cd src/thirdParty && ./compile_elemental
        - script:
            name: precice
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)

                cd src/thirdParty

                export PRECICE_MPI_LIB=mpi
                export PRECICE_MPI_LIB_PATH="`mpicc --showme:libdirs`"
                export PRECICE_MPI_INC_PATH="`mpicc --showme:incdirs`"
                export CPLUS_INCLUDE_PATH=`pwd`/eigen:`pwd`/boost
                export LIBRARY_PATH=$FOAM_LIBBIN

                cd precice
                scons -j $WM_NCOMPPROCS build=debug python=off petsc=off compiler=mpicxx solib
                cp build/debug-nopetsc-nopython/libprecice.* ${FOAM_LIBBIN}/
                rm -rf build/*
        - script:
            name: boundary conditions
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmakeLnInclude src/boundaryConditions
                wmakeLnInclude src/fvSchemes
                wmakeLnInclude src/fsi
                wmakeLnInclude src/RBFMeshMotionSolver
                wmakeLnInclude src/SRFModelAbs
                wmake libso src/boundaryConditions
        - script:
            name: schemes
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/fvSchemes
        - script:
            name: fsi
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/fsi
        - script:
            name: radial basis function mesh motion solver
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/RBFMeshMotionSolver
        - script:
            name: solvers
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd applications/solvers/fsi && wmake all
                cd ../ && wmake unsteadyPUCoupledFoam
        - script:
            name: test app
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && wmake all
        - script:
            name: cppcheck
            code: |
                (cd src/fsi && cppcheck -j `nproc` --error-exitcode=1 --enable=performance,portability .)
                (cd src/RBFMeshMotionSolver -j `nproc` && cppcheck --error-exitcode=1 --enable=performance,portability .)
                (cd src/tests && cppcheck -j `nproc` --error-exitcode=1 --enable=performance,portability .)
                (cd applications && cppcheck -j `nproc` --error-exitcode=1 --enable=performance,portability .)
        - script:
            name: cleanup
            code: rm -rf * .git* .travis.yml .uncrustify.cfg

ubuntu:
    box: davidsblom/foam-fsi:ubuntu
    steps:
        - script:
            name: initialize git submodules
            code: |
                git checkout .
                git submodule update --init --recursive
        - script:
            name: initialize dependencies
            code: |
                # foam-extend
                cd /home
                tar xf foam-extend-3.2.tar.gz && rm foam-extend-3.2.tar.gz
                source foam-extend-3.2/etc/prefs.sh && source foam-extend-3.2/etc/bashrc

                # boost
                cd $WERCKER_SOURCE_DIR/src/thirdParty
                ln -s /home/boost_1_61_0 boost
                sed -i "s/string const/std::string const/" ./boost/boost/rational.hpp
                cd boost && ./bootstrap.sh --with-libraries=log,program_options && ./b2 -j `nproc`
                cp stage/lib/* $FOAM_LIBBIN/ && cd ..

                # petsc
                ln -s /home/petsc-3.6.4 petsc
                cp petsc/x86_64/lib/lib* ${FOAM_LIBBIN}/

                # deal.II
                ln -s /home/dealii-8.4.1 dealii
                cp dealii/bin/lib/libdeal* ${FOAM_LIBBIN}/

                # googletest
                ln -s /home/googletest-release-1.7.0 gtest

                # yaml-cpp
                ln -s /home/yaml-cpp-release-0.5.3 yaml-cpp
                cp yaml-cpp/build/libyaml-cpp* ${FOAM_LIBBIN}/
        - script:
            name: elemental
            code: cd src/thirdParty && ./compile_elemental
        - script:
            name: precice
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)

                cd src/thirdParty

                export PRECICE_MPI_LIB=mpi
                export PRECICE_MPI_LIB_PATH="`mpicc --showme:libdirs`"
                export PRECICE_MPI_INC_PATH="`mpicc --showme:incdirs`"
                export CPLUS_INCLUDE_PATH=`pwd`/eigen:`pwd`/boost
                export LIBRARY_PATH=$FOAM_LIBBIN

                cd precice
                scons -j $WM_NCOMPPROCS build=release python=off petsc=off compiler=mpicxx solib
                cp build/release-nopetsc-nopython/libprecice.* ${FOAM_LIBBIN}/
                rm -rf build/*
        - script:
            name: boundary conditions
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmakeLnInclude src/boundaryConditions
                wmakeLnInclude src/fvSchemes
                wmakeLnInclude src/fsi
                wmakeLnInclude src/RBFMeshMotionSolver
                wmakeLnInclude src/SRFModelAbs
                wmake libso src/boundaryConditions
        - script:
            name: schemes
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/fvSchemes
        - script:
            name: fsi
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/fsi
        - script:
            name: radial basis function mesh motion solver
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/RBFMeshMotionSolver
        - script:
            name: solvers
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd applications/solvers/fsi && wmake all
                cd ../ && wmake unsteadyPUCoupledFoam
        - script:
            name: test app
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && wmake all
        - script:
            name: testsuite-sdc
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-sdc
        - script:
            name: testsuite-sdc-fsi
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-sdc-fsi
        - script:
            name: testsuite-rbf
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-rbf
                mpirun -np 4 --allow-run-as-root testsuite-rbf
        - script:
            name: testsuite-spacemapping
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-spacemapping
        - script:
            name: testsuite-fsi
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-fsi
        - script:
            name: testsuite-dealii
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests && python runTests.py testsuite-dealii
        - script:
            name: tutorials
            code: |
                (cd /home/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests/tutorials && python testsuite.py
        - script:
            name: cleanup
            code: rm -rf * .git* .travis.yml .uncrustify.cfg
