box: davidsblom/foam-fsi

command-timeout: 60
no-response-timeout: 30

build:
    steps:
        - script:
            name: initialize git submodules
            code: |
                git checkout .
                git submodule update --init --recursive
        - script:
            name: boost
            code: |
                export BOOST_VERSION=1_55_0
                export BOOST_VERSION_DOT=1.55.0
                cd src/thirdParty

                if [ -f "$WERCKER_CACHE_DIR/boost_${BOOST_VERSION}.tar.bz2" ]; then
                    debug "boost library found in cache"
                    rsync -azvh $WERCKER_CACHE_DIR/boost_${BOOST_VERSION}.tar.bz2 ./
                else
                    wget -O boost_${BOOST_VERSION}.tar.bz2 http://downloads.sourceforge.net/project/boost/boost/${BOOST_VERSION_DOT}/boost_${BOOST_VERSION}.tar.bz2
                    rsync -azvh boost_${BOOST_VERSION}.tar.bz2 $WERCKER_CACHE_DIR/
                fi

                tar jxf boost_${BOOST_VERSION}.tar.bz2
                ln -s boost_${BOOST_VERSION} boost
                rm boost_${BOOST_VERSION}.tar.bz2
        - script:
            name: PETSc
            code: |
                cd src/thirdParty
                mkdir -p petsc
                cd petsc
                ln -s /usr/include/petsc include
        - script:
            name: deal.II
            code: |
                ls -lah /pipeline/output
                cd src/thirdParty
                ln -s $WERCKER_OUTPUT_DIR/dealii-8.4.1 dealii
                cp dealii/bin/lib/libdeal* ${FOAM_LIBBIN}/
        - script:
            name: googletest
            code: |
                export GTEST_VERSION=1.7.0

                cd src/thirdParty

                if [ -f "$WERCKER_CACHE_DIR/gtest-${GTEST_VERSION}.tar.xz" ]; then
                    debug "googletest library found in cache"
                    rsync -azvh $WERCKER_CACHE_DIR/gtest-${GTEST_VERSION}.tar.xz ./
                    tar -Jxf gtest-${GTEST_VERSION}.tar.xz
                    rm gtest-${GTEST_VERSION}.tar.xz
                    ln -s gtest-${GTEST_VERSION} gtest
                else
                    debug "googletest library not found in cache, will download and compile"
                fi

                ./compile_gtest

                if [ ! -f "$WERCKER_CACHE_DIR/gtest-${GTEST_VERSION}.tar.xz" ]; then
                    tar -cJf gtest-${GTEST_VERSION}.tar.xz gtest-${GTEST_VERSION}
                    rsync -azvh gtest-${GTEST_VERSION}.tar.xz $WERCKER_CACHE_DIR/
                    rm gtest-${GTEST_VERSION}.tar.xz
                fi
        - script:
            name: precice
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)

                cd src/thirdParty

                export BOOST_ROOT=`pwd`/boost
                export PRECICE_BOOST_ROOT=${BOOST_ROOT}
                export PRECICE_MPI_LIB=mpi
                export PRECICE_MPI_LIB_PATH="`mpicc --showme:libdirs`"
                export PRECICE_MPI_INC_PATH="`mpicc --showme:incdirs`"
                export CPLUS_INCLUDE_PATH=`pwd`/eigen

                # Build preCICE
                cd precice
                if [ "$WM_COMPILE_OPTION" = "Opt" ]
                then
                    scons -j $WM_NCOMPPROCS build=release python=off petsc=off compiler=mpicxx solib
                    cp build/release-nopetsc-nopython/libprecice.* ${FOAM_LIBBIN}/
                elif [ "$WM_COMPILE_OPTION" = "Debug" ]
                then
                    scons -j $WM_NCOMPPROCS build=debug python=off petsc=off compiler=mpicxx solib
                    cp build/debug-nopetsc-nopython/libprecice.* ${FOAM_LIBBIN}/
                fi

                # cleanup build files
                rm -rf build/*
        - script:
            name: yaml-cpp
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)

                cd src/thirdParty

                if [ -f "$WERCKER_CACHE_DIR/yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz" ]; then
                    debug "yaml-cpp library found in cache"
                    rsync -azvh $WERCKER_CACHE_DIR/yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz ./
                    tar -Jxf yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz
                    ln -s yaml-cpp-release-${YAML_CPP_VERSION} yaml-cpp
                else
                    debug "yaml-cpp library not found in cache, will download and compile"
                fi

                ./compile_yaml

                if [ ! -f "$WERCKER_CACHE_DIR/yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz" ]; then
                    tar -cJf yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz yaml-cpp-release-${YAML_CPP_VERSION}
                    rsync -azvh yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz $WERCKER_CACHE_DIR/
                    rm yaml-cpp-release-${YAML_CPP_VERSION}.tar.xz
                fi
        - script:
            name: boundary conditions
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmakeLnInclude src/boundaryConditions
                wmakeLnInclude src/fvSchemes
                wmakeLnInclude src/fsi
                wmakeLnInclude src/RBFMeshMotionSolver
                wmakeLnInclude src/SRFModelAbs
                wmake libso src/boundaryConditions
        - script:
            name: schemes
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/fvSchemes
        - script:
            name: fsi
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/fsi
        - script:
            name: radial basis function mesh motion solver
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake libso src/RBFMeshMotionSolver
        - script:
            name: FSI solvers
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake applications/solvers/fsi/fsiFoam
                wmake applications/solvers/fsi/solidFoam
                wmake applications/solvers/fsi/fluidFoam
        - script:
            name: precice FSI solvers
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake applications/solvers/fsi/fsiSolidFoam
                wmake applications/solvers/fsi/fsiFluidFoam
        - script:
            name: test app
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                wmake src/tests/testsuite-dealii
                wmake src/tests/testsuite-fsi
                wmake src/tests/testsuite-rbf
                wmake src/tests/testsuite-sdc
                wmake src/tests/testsuite-sdc-fsi
                wmake src/tests/testsuite-spacemapping
        - script:
            name: testsuite-sdc
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests
                python runTests.py testsuite-sdc
        - script:
            name: testsuite-sdc-fsi
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests
                python runTests.py testsuite-sdc-fsi
        - script:
            name: testsuite-rbf
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests
                python runTests.py testsuite-rbf
        - script:
            name: testsuite-spacemapping
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests
                python runTests.py testsuite-spacemapping
        - script:
            name: testsuite-fsi
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests
                python runTests.py testsuite-fsi
        - script:
            name: testsuite-dealii
            code: |
                (cd $WERCKER_OUTPUT_DIR/foam-extend-3.2 && source etc/prefs.sh && source etc/bashrc)
                cd src/tests
                python runTests.py testsuite-dealii
        - script:
            name: cppcheck
            code: |
                (cd src/fsi && cppcheck --error-exitcode=1 --enable=performance,portability .)
                (cd src/RBFMeshMotionSolver && cppcheck --error-exitcode=1 --enable=performance,portability .)
                (cd src/tests && cppcheck --error-exitcode=1 --enable=performance,portability .)
                (cd applications && cppcheck --error-exitcode=1 --enable=performance,portability .)
        - script:
            name: cleanup
            code: rm -rf *
