#!/bin/bash

set -e
set -x

# Ensure the script is executed in this directory
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cd $DIR

# Define which versions of the different packages are used

export BOOST_VERSION=1_55_0
export BOOST_VERSION_DOT=1.55.0

# Download Boost
if [ ! -d "boost_${BOOST_VERSION}" ]; then
    wget -O boost_${BOOST_VERSION}.tar.bz2 http://downloads.sourceforge.net/project/boost/boost/${BOOST_VERSION_DOT}/boost_${BOOST_VERSION}.tar.bz2
    tar jxf boost_${BOOST_VERSION}.tar.bz2
    rm -f boost_${BOOST_VERSION}.tar.bz2
fi

# Set environment variables necessary for building preCICE
export BOOST_ROOT=`pwd`/boost_${BOOST_VERSION}
export PRECICE_BOOST_ROOT=${BOOST_ROOT}
export PRECICE_MPI_LIB=mpi
export PRECICE_MPI_LIB_PATH="`mpicc --showme:libdirs`"
export PRECICE_MPI_INC_PATH="`mpicc --showme:incdirs`"
export CPLUS_INCLUDE_PATH=`pwd`/eigen
export PETSC_DIR=`pwd`/petsc
export PETSC_ARCH=x86_64

mkdir -p ${FOAM_LIBBIN}
mkdir -p ${FOAM_APPBIN}

# Build preCICE
cd precice
if [ "$WM_COMPILE_OPTION" = "Opt" ]
then
    scons -j $WM_NCOMPPROCS build=release python=off petsc=on compiler=mpicxx solib
    scons -j $WM_NCOMPPROCS build=release python=off petsc=on compiler=mpicxx
elif [ "$WM_COMPILE_OPTION" = "Debug" ]
then
    scons -j $WM_NCOMPPROCS build=debug python=off petsc=on compiler=mpicxx solib
    scons -j $WM_NCOMPPROCS build=debug python=off petsc=on compiler=mpicxx
fi

cp build/last/libprecice.* ${FOAM_LIBBIN}/
cp build/last/binprecice ${FOAM_APPBIN}/
