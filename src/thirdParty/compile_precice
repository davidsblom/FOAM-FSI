#!/bin/bash

set -e
set -x

# Ensure the script is executed in this directory
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cd $DIR

# Define which versions of the different packages are used

mkdir -p ${FOAM_LIBBIN}
mkdir -p ${FOAM_APPBIN}

# Download Boost
if [ ! -d "boost" ]; then
    wget http://downloads.sourceforge.net/project/boost/boost/1.61.0/boost_1_61_0.tar.bz2 -O - | tar xj
    ln -s boost_1_61_0 boost
    sed -i "s/string const/std::string const/" ./boost/boost/rational.hpp
    cd boost && ./bootstrap.sh --with-libraries=log,program_options && ./b2 -j `nproc`
    cp stage/lib/* $FOAM_LIBBIN/ && cd ..
fi

# Set environment variables necessary for building preCICE
export PRECICE_MPI_LIB=mpi
export PRECICE_MPI_LIB_PATH="`mpicc --showme:libdirs`"
export PRECICE_MPI_INC_PATH="`mpicc --showme:incdirs`"
export CPLUS_INCLUDE_PATH=`pwd`/eigen:`pwd`/boost
export LIBRARY_PATH=$FOAM_LIBBIN
export LD_LIBRARY_PATH=$FOAM_LIBBIN
export PETSC_DIR=`pwd`/petsc
export PETSC_ARCH=x86_64

# Build preCICE
cd precice
if [ "$WM_COMPILE_OPTION" = "Opt" ]
then
    scons -j $WM_NCOMPPROCS build=release python=off petsc=on compiler=mpicxx solib Symlink
elif [ "$WM_COMPILE_OPTION" = "Debug" ]
then
    scons -j $WM_NCOMPPROCS build=debug python=off petsc=on compiler=mpicxx solib Symlink
fi

cp build/last/libprecice.* ${FOAM_LIBBIN}/
cp build/last/binprecice ${FOAM_APPBIN}/
